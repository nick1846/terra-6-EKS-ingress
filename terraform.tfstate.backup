{
  "version": 4,
  "terraform_version": "0.14.0",
  "serial": 5080,
  "lineage": "f8d52fe7-dd17-6ce9-b49c-d34d90a36bc2",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "azs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": "available",
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-2:021510583954:cluster/my-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXlOVEV6TURnME1sb1hEVE14TURVeU16RXpNRGcwTWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3cyCjhtdGNidWszS0tmbzdTVktkbWY3ZENKMjBZUHZ1a3BIZldzVE1nV1ZQaHpUSEVGYkp0WU1UcWozUk5IQ0xzdzkKaXp0dzliUk9IVHk2WkdWdUxjcVV3R0VsT1hrRFN2ekdidDZGSWRWdTA5NUFwNzZZNzVMVUF1a2pKdmxtTUxvMApJVTExZEI5VFVmaStTKzdMb0s0R2R1cUswU1BxdS85Wkc3WnhrR1hSeTFXbTR5Zk1zUGQzYThnM1JPcjNLM05sClc0dFNtTXhEckk1b0RlSGhRTUtRUXNXQmlFV2h3TVQrV1NwblhiTXJIMmlIMkFVOEpWVEZpSjZIK3ZrZTJCQnIKNlJOcWZGWjVsRHJXWnRxNmxHSjFZSm1RTkFwOGp1RjJBdVVJbEFjUFFtekpyVEEwbGRVOWJUSTcybUVRMTRsdwpPU281SG1iN1NMcjBqdHB0bm84Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMalJ1dllLakNMQXNhd01aOFhISzlmVklUdDUKT1lGUFFsaFl2WTdxSU5NM25Rb3NxQWUzNDZ6LzRMOERaOXhIVUxhSks1RnlBMVVNN0dFd2Evb0hDSG9QUjg2UwozcEhCd0VRSk9XVHFDRE9MUDU0UFFsOEFXSDBuc2IvQXpRWHExbUdsaWlMVVdxSzFsQTFMVzRpdVVVTDZwU2NkCjVmenBkZlJ0c1l5WU1yVUJnK3BrZ2l1UklVdXlFSU9MaWh4S3JzWGh2eWtWdmk2WUxVd2J6b0RpdDNDVjg0SFcKUWZxSnlwQ3V5c2NHcWl6ZVh6MzNqazRwQ2FsQ3VsSmVmazIxcjc0Tk5BekdmSWptTzVJZTIxQ2dSUXR1VEJkcApXWG1tTWkwZ2R6d250bXdzelNRTCtUNWt5NEYrVzdHTjNuMmE3dWVXZWR0M2RuM080Y0NhZi9PaUZzST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-25 13:03:07.426 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://5B58C90A24A38C427646602AE23BCB33.yl4.us-east-2.eks.amazonaws.com",
            "id": "my-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "my-cluster",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::021510583954:role/my-cluster20210525130249659000000001",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.17",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-02d11f39dc9d039f7",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0f86bb292d230aacc"
                ],
                "subnet_ids": [
                  "subnet-0a19ac0c7f16c3271",
                  "subnet-0fd6b493c7a6d331d"
                ],
                "vpc_id": "vpc-0af3b26e0e2c4042a"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster",
            "name": "my-cluster",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFRS0FSQk8ySkJLSzY1U1dGJTJGMjAyMTA1MjUlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIxMDUyNVQxMzEzMDJaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTg2MzIyODc5NzIyZDM2MDM5ZjQ3YmEyZDA4NTI4MWM0OTJiMmYwMWU2OGY0YjEwYmZmY2RiYmI0NTgwZmEwYzA"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "controllers_prerequisites",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:  \n  annotations:                                                                        \n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/external-dns-role            \n  name: external-dns\n  namespace: ingress-controllers",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:  \n  annotations:                                                                        \n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/aws-ingress-controller-role             \n  name: aws-ingress-controller\n  namespace: ingress-controllers"
            ],
            "id": "39d960bdc273a09e94b56f6c4be510db684ba26b4137f3e0cd89670b3cf787a7",
            "pattern": "./k8s_manifests/controllers_prerequisites/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: traefik\n  namespace: ingress-controllers  \n  labels:\n    app: traefik\nspec:\n  entryPoints:\n  - websecure\n  routes:   \n  - match: Host(`traefik.justpipeline.com`) # \u0026\u0026 (PathPrefix(`/api`) || PathPrefix(`/dashboard`))\n    kind: Rule\n    services:        \n      - name: api@internal\n        kind: TraefikService",
              "---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: traefik\n  namespace: ingress-controllers\n  annotations:\n    alb.ingress.kubernetes.io/actions.ssl-redirect: '{\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}}'\n    alb.ingress.kubernetes.io/certificate-arn:  arn:aws:acm:us-east-2:021510583954:certificate/6f7ff065-7916-4d26-8ce6-0943af0ebd8d    \n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\":443}]'\n    alb.ingress.kubernetes.io/scheme: internet-facing    \n    alb.ingress.kubernetes.io/healthcheck-path: /ping\n    alb.ingress.kubernetes.io/healthcheck-port: '9000'\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/target-type: ip\n    external-dns.alpha.kubernetes.io/hostname: traefik.justpipeline.com        \n  labels:\n    app: traefik\nspec:  \n  rules:     \n    - http:\n        paths:\n          # HTTP to HTTPS redirect entry\n          - path: /*\n            backend:\n              serviceName: ssl-redirect\n              servicePort: use-annotation\n          - path: /* \n            backend:\n              serviceName: helm-traefik\n              servicePort: 443"
            ],
            "id": "bdf6304b269272c3ad6a8e83c5aba82900ebd3cbcd1b4e76c2d1b59ceb11004f",
            "pattern": "./k8s_manifests/ingress/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "namespaces",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "---\napiVersion: v1\nkind: Namespace\nmetadata:  \n  name: ingress-controllers"
            ],
            "id": "c52f6844c3276835d69d6474a690e925cea6c464cfdb9653b26eadc2d847a2ee",
            "pattern": "./k8s_manifests/namespaces/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "aws_ingress_controller_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:policy/aws-ingress-controller-policy",
            "description": "",
            "id": "arn:aws:iam::021510583954:policy/aws-ingress-controller-policy",
            "name": "aws-ingress-controller-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"acm:DescribeCertificate\",\n          \"acm:ListCertificates\",\n          \"acm:GetCertificate\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"ec2:AuthorizeSecurityGroupIngress\",\n          \"ec2:CreateSecurityGroup\",\n          \"ec2:CreateTags\",\n          \"ec2:DeleteTags\",\n          \"ec2:DeleteSecurityGroup\",\n          \"ec2:DescribeAccountAttributes\",\n          \"ec2:DescribeAddresses\",\n          \"ec2:DescribeInstances\",\n          \"ec2:DescribeInstanceStatus\",\n          \"ec2:DescribeInternetGateways\",\n          \"ec2:DescribeNetworkInterfaces\",\n          \"ec2:DescribeSecurityGroups\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:DescribeTags\",\n          \"ec2:DescribeVpcs\",\n          \"ec2:ModifyInstanceAttribute\",\n          \"ec2:ModifyNetworkInterfaceAttribute\",\n          \"ec2:RevokeSecurityGroupIngress\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"elasticloadbalancing:AddListenerCertificates\",\n          \"elasticloadbalancing:AddTags\",\n          \"elasticloadbalancing:CreateListener\",\n          \"elasticloadbalancing:CreateLoadBalancer\",\n          \"elasticloadbalancing:CreateRule\",\n          \"elasticloadbalancing:CreateTargetGroup\",\n          \"elasticloadbalancing:DeleteListener\",\n          \"elasticloadbalancing:DeleteLoadBalancer\",\n          \"elasticloadbalancing:DeleteRule\",\n          \"elasticloadbalancing:DeleteTargetGroup\",\n          \"elasticloadbalancing:DeregisterTargets\",\n          \"elasticloadbalancing:DescribeListenerCertificates\",\n          \"elasticloadbalancing:DescribeListeners\",\n          \"elasticloadbalancing:DescribeLoadBalancers\",\n          \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n          \"elasticloadbalancing:DescribeRules\",\n          \"elasticloadbalancing:DescribeSSLPolicies\",\n          \"elasticloadbalancing:DescribeTags\",\n          \"elasticloadbalancing:DescribeTargetGroups\",\n          \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n          \"elasticloadbalancing:DescribeTargetHealth\",\n          \"elasticloadbalancing:ModifyListener\",\n          \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n          \"elasticloadbalancing:ModifyRule\",\n          \"elasticloadbalancing:ModifyTargetGroup\",\n          \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n          \"elasticloadbalancing:RegisterTargets\",\n          \"elasticloadbalancing:RemoveListenerCertificates\",\n          \"elasticloadbalancing:RemoveTags\",\n          \"elasticloadbalancing:SetIpAddressType\",\n          \"elasticloadbalancing:SetSecurityGroups\",\n          \"elasticloadbalancing:SetSubnets\",\n          \"elasticloadbalancing:SetWebAcl\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"iam:CreateServiceLinkedRole\",\n          \"iam:GetServerCertificate\",\n          \"iam:ListServerCertificates\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"cognito-idp:DescribeUserPoolClient\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"waf-regional:GetWebACLForResource\",\n          \"waf-regional:GetWebACL\",\n          \"waf-regional:AssociateWebACL\",\n          \"waf-regional:DisassociateWebACL\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"tag:GetResources\",\n          \"tag:TagResources\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"waf:GetWebACL\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"wafv2:GetWebACL\",\n          \"wafv2:GetWebACLForResource\",\n          \"wafv2:AssociateWebACL\",\n          \"wafv2:DisassociateWebACL\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"shield:DescribeProtection\",\n          \"shield:GetSubscriptionState\",\n          \"shield:DeleteProtection\",\n          \"shield:CreateProtection\",\n          \"shield:DescribeSubscription\",\n          \"shield:ListProtections\"\n        ],\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n  ",
            "policy_id": "ANPAQKARBO2JFILQP5IKF",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "external_dns_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:policy/external-dns-policy",
            "description": "",
            "id": "arn:aws:iam::021510583954:policy/external-dns-policy",
            "name": "external-dns-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"route53:ChangeResourceRecordSets\"\n        ],\n        \"Resource\": [\n          \"arn:aws:route53:::hostedzone/*\"\n        ]\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"route53:ListHostedZones\",\n          \"route53:ListResourceRecordSets\"\n        ],\n        \"Resource\": [\n          \"*\"\n        ]\n      }\n    ]\n  }",
            "policy_id": "ANPAQKARBO2JJDMYA3DBK",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "eks_ingress_localhost",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/32"
            ],
            "description": "Allow traffic from localhost",
            "from_port": 443,
            "id": "sgrule-3585615063",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0f86bb292d230aacc",
            "self": false,
            "source_security_group_id": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.cluster",
            "module.my_vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "helm-aws-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "helm-aws-ingress",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.1.3",
                "chart": "aws-load-balancer-controller",
                "name": "helm-aws-ingress",
                "namespace": "ingress-controllers",
                "revision": 1,
                "values": "{\"autoDiscoverAwsRegion\":true,\"autoDiscoverAwsVpcID\":true,\"clusterName\":\"my-cluster\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-ingress-controller\"}}",
                "version": "1.1.5"
              }
            ],
            "name": "helm-aws-ingress",
            "namespace": "ingress-controllers",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoDiscoverAwsRegion",
                "type": "",
                "value": "true"
              },
              {
                "name": "autoDiscoverAwsVpcID",
                "type": "",
                "value": "true"
              },
              {
                "name": "clusterName",
                "type": "",
                "value": "my-cluster"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-ingress-controller"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.1.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.namespaces",
            "kubectl_manifest.my_controllers_prerequisites",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "helm-ext-dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "external-dns",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "helm-ext-dns",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.8.0",
                "chart": "external-dns",
                "name": "helm-ext-dns",
                "namespace": "ingress-controllers",
                "revision": 1,
                "values": "{\"aws\":{\"region\":\"us-east-2\",\"zoneType\":\"public\"},\"domainFilters\":[\"justpipeline.com\"],\"podSecurityContext\":{\"fsGroup\":65534,\"runAsUser\":0},\"provider\":\"aws\",\"registry\":\"noop\",\"serviceAccount\":{\"create\":false,\"name\":\"external-dns\"}}",
                "version": "4.12.3"
              }
            ],
            "name": "helm-ext-dns",
            "namespace": "ingress-controllers",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "aws.region",
                "type": "",
                "value": "us-east-2"
              },
              {
                "name": "aws.zoneType",
                "type": "",
                "value": "public"
              },
              {
                "name": "domainFilters[0]",
                "type": "",
                "value": "justpipeline.com"
              },
              {
                "name": "podSecurityContext.fsGroup",
                "type": "",
                "value": "65534"
              },
              {
                "name": "podSecurityContext.runAsUser",
                "type": "",
                "value": "0"
              },
              {
                "name": "provider",
                "type": "",
                "value": "aws"
              },
              {
                "name": "registry",
                "type": "",
                "value": "noop"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "external-dns"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.12.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.namespaces",
            "kubectl_manifest.my_controllers_prerequisites",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "helm-traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "helm-traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.4.8",
                "chart": "traefik",
                "name": "helm-traefik",
                "namespace": "ingress-controllers",
                "revision": 1,
                "values": "{\"service\":{\"type\":\"ClusterIP\"}}",
                "version": "9.19.1"
              }
            ],
            "name": "helm-traefik",
            "namespace": "ingress-controllers",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.traefik.io/traefik",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\nservice: \n  type: ClusterIP\n \n  \n"
            ],
            "verify": false,
            "version": "9.19.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.namespaces",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "my_controllers_prerequisites",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/ingress-controllers/serviceaccounts/external-dns",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "apiVersion=v1,kind=ServiceAccount,metadata.annotations.eks.amazonaws.com/role-arn=arn:aws:iam::021510583954:role/external-dns-role,metadata.name=external-dns,metadata.namespace=ingress-controllers",
            "live_resource_version": "1372",
            "live_uid": "9b8301cf-004b-49fa-9a50-5c45b3ab00a9",
            "name": "external-dns",
            "namespace": "ingress-controllers",
            "override_namespace": null,
            "resource_version": "1372",
            "sensitive_fields": null,
            "timeouts": null,
            "uid": "9b8301cf-004b-49fa-9a50-5c45b3ab00a9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:  \n  annotations:                                                                        \n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/external-dns-role            \n  name: external-dns\n  namespace: ingress-controllers",
            "yaml_body_parsed": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/external-dns-role\n  name: external-dns\n  namespace: ingress-controllers\n",
            "yaml_incluster": "apiVersion=v1,kind=ServiceAccount,metadata.annotations.eks.amazonaws.com/role-arn=arn:aws:iam::021510583954:role/external-dns-role,metadata.name=external-dns,metadata.namespace=ingress-controllers"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.namespaces",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/ingress-controllers/serviceaccounts/aws-ingress-controller",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "apiVersion=v1,kind=ServiceAccount,metadata.annotations.eks.amazonaws.com/role-arn=arn:aws:iam::021510583954:role/aws-ingress-controller-role,metadata.name=aws-ingress-controller,metadata.namespace=ingress-controllers",
            "live_resource_version": "1374",
            "live_uid": "c03eed7d-61ac-412a-88da-82c88317ecc1",
            "name": "aws-ingress-controller",
            "namespace": "ingress-controllers",
            "override_namespace": null,
            "resource_version": "1374",
            "sensitive_fields": null,
            "timeouts": null,
            "uid": "c03eed7d-61ac-412a-88da-82c88317ecc1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:  \n  annotations:                                                                        \n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/aws-ingress-controller-role             \n  name: aws-ingress-controller\n  namespace: ingress-controllers",
            "yaml_body_parsed": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::021510583954:role/aws-ingress-controller-role\n  name: aws-ingress-controller\n  namespace: ingress-controllers\n",
            "yaml_incluster": "apiVersion=v1,kind=ServiceAccount,metadata.annotations.eks.amazonaws.com/role-arn=arn:aws:iam::021510583954:role/aws-ingress-controller-role,metadata.name=aws-ingress-controller,metadata.namespace=ingress-controllers"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.namespaces",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "my_ingress",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "api_version": "traefik.containo.us/v1alpha1",
            "force_new": false,
            "id": "/apis/traefik.containo.us/v1alpha1/namespaces/ingress-controllers/ingressroutes/traefik",
            "ignore_fields": null,
            "kind": "IngressRoute",
            "live_manifest_incluster": "apiVersion=traefik.containo.us/v1alpha1,kind=IngressRoute,metadata.labels.app=traefik,metadata.name=traefik,metadata.namespace=ingress-controllers,spec.entryPoints.#=1,spec.entryPoints.0=websecure,spec.routes.#=1,spec.routes.0.kind=Rule,spec.routes.0.match=Host(`traefik.justpipeline.com`),spec.routes.0.services.#=1,spec.routes.0.services.0.kind=TraefikService,spec.routes.0.services.0.name=api@internal",
            "live_resource_version": "1637",
            "live_uid": "11ab3c2b-a27a-4963-99fd-e9515caba2e2",
            "name": "traefik",
            "namespace": "ingress-controllers",
            "override_namespace": null,
            "resource_version": "1637",
            "sensitive_fields": null,
            "timeouts": null,
            "uid": "11ab3c2b-a27a-4963-99fd-e9515caba2e2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: traefik\n  namespace: ingress-controllers  \n  labels:\n    app: traefik\nspec:\n  entryPoints:\n  - websecure\n  routes:   \n  - match: Host(`traefik.justpipeline.com`) # \u0026\u0026 (PathPrefix(`/api`) || PathPrefix(`/dashboard`))\n    kind: Rule\n    services:        \n      - name: api@internal\n        kind: TraefikService",
            "yaml_body_parsed": "apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  labels:\n    app: traefik\n  name: traefik\n  namespace: ingress-controllers\nspec:\n  entryPoints:\n  - websecure\n  routes:\n  - kind: Rule\n    match: Host(`traefik.justpipeline.com`)\n    services:\n    - kind: TraefikService\n      name: api@internal\n",
            "yaml_incluster": "apiVersion=traefik.containo.us/v1alpha1,kind=IngressRoute,metadata.labels.app=traefik,metadata.name=traefik,metadata.namespace=ingress-controllers,spec.entryPoints.#=1,spec.entryPoints.0=websecure,spec.routes.#=1,spec.routes.0.kind=Rule,spec.routes.0.match=Host(`traefik.justpipeline.com`),spec.routes.0.services.#=1,spec.routes.0.services.0.kind=TraefikService,spec.routes.0.services.0.name=api@internal"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.ingress",
            "data.kubectl_path_documents.namespaces",
            "helm_release.helm-aws-ingress",
            "helm_release.helm-ext-dns",
            "helm_release.helm-traefik",
            "kubectl_manifest.my_controllers_prerequisites",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "api_version": "extensions/v1beta1",
            "force_new": false,
            "id": "/apis/extensions/v1beta1/namespaces/ingress-controllers/ingresses/traefik",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "apiVersion=extensions/v1beta1,kind=Ingress,metadata.annotations.alb.ingress.kubernetes.io/actions.ssl-redirect={\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}},metadata.annotations.alb.ingress.kubernetes.io/certificate-arn=arn:aws:acm:us-east-2:021510583954:certificate/6f7ff065-7916-4d26-8ce6-0943af0ebd8d,metadata.annotations.alb.ingress.kubernetes.io/healthcheck-path=/ping,metadata.annotations.alb.ingress.kubernetes.io/healthcheck-port=9000,metadata.annotations.alb.ingress.kubernetes.io/listen-ports=[{\"HTTP\": 80}, {\"HTTPS\":443}],metadata.annotations.alb.ingress.kubernetes.io/scheme=internet-facing,metadata.annotations.alb.ingress.kubernetes.io/target-type=ip,metadata.annotations.external-dns.alpha.kubernetes.io/hostname=traefik.justpipeline.com,metadata.annotations.kubernetes.io/ingress.class=alb,metadata.labels.app=traefik,metadata.name=traefik,metadata.namespace=ingress-controllers,spec.rules.#=1,spec.rules.0.http.paths.#=2,spec.rules.0.http.paths.0.backend.serviceName=ssl-redirect,spec.rules.0.http.paths.0.backend.servicePort=use-annotation,spec.rules.0.http.paths.0.path=/*,spec.rules.0.http.paths.1.backend.serviceName=helm-traefik,spec.rules.0.http.paths.1.backend.servicePort=443,spec.rules.0.http.paths.1.path=/*",
            "live_resource_version": "1633",
            "live_uid": "e292ff40-65ab-495b-b866-99d73fa60f52",
            "name": "traefik",
            "namespace": "ingress-controllers",
            "override_namespace": null,
            "resource_version": "1633",
            "sensitive_fields": null,
            "timeouts": null,
            "uid": "e292ff40-65ab-495b-b866-99d73fa60f52",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: traefik\n  namespace: ingress-controllers\n  annotations:\n    alb.ingress.kubernetes.io/actions.ssl-redirect: '{\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}}'\n    alb.ingress.kubernetes.io/certificate-arn:  arn:aws:acm:us-east-2:021510583954:certificate/6f7ff065-7916-4d26-8ce6-0943af0ebd8d    \n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\":443}]'\n    alb.ingress.kubernetes.io/scheme: internet-facing    \n    alb.ingress.kubernetes.io/healthcheck-path: /ping\n    alb.ingress.kubernetes.io/healthcheck-port: '9000'\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/target-type: ip\n    external-dns.alpha.kubernetes.io/hostname: traefik.justpipeline.com        \n  labels:\n    app: traefik\nspec:  \n  rules:     \n    - http:\n        paths:\n          # HTTP to HTTPS redirect entry\n          - path: /*\n            backend:\n              serviceName: ssl-redirect\n              servicePort: use-annotation\n          - path: /* \n            backend:\n              serviceName: helm-traefik\n              servicePort: 443",
            "yaml_body_parsed": "apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    alb.ingress.kubernetes.io/actions.ssl-redirect: '{\"Type\": \"redirect\", \"RedirectConfig\":\n      { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}}'\n    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:021510583954:certificate/6f7ff065-7916-4d26-8ce6-0943af0ebd8d\n    alb.ingress.kubernetes.io/healthcheck-path: /ping\n    alb.ingress.kubernetes.io/healthcheck-port: \"9000\"\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\":443}]'\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/target-type: ip\n    external-dns.alpha.kubernetes.io/hostname: traefik.justpipeline.com\n    kubernetes.io/ingress.class: alb\n  labels:\n    app: traefik\n  name: traefik\n  namespace: ingress-controllers\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          serviceName: ssl-redirect\n          servicePort: use-annotation\n        path: /*\n      - backend:\n          serviceName: helm-traefik\n          servicePort: 443\n        path: /*\n",
            "yaml_incluster": "apiVersion=extensions/v1beta1,kind=Ingress,metadata.annotations.alb.ingress.kubernetes.io/actions.ssl-redirect={\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}},metadata.annotations.alb.ingress.kubernetes.io/certificate-arn=arn:aws:acm:us-east-2:021510583954:certificate/6f7ff065-7916-4d26-8ce6-0943af0ebd8d,metadata.annotations.alb.ingress.kubernetes.io/healthcheck-path=/ping,metadata.annotations.alb.ingress.kubernetes.io/healthcheck-port=9000,metadata.annotations.alb.ingress.kubernetes.io/listen-ports=[{\"HTTP\": 80}, {\"HTTPS\":443}],metadata.annotations.alb.ingress.kubernetes.io/scheme=internet-facing,metadata.annotations.alb.ingress.kubernetes.io/target-type=ip,metadata.annotations.external-dns.alpha.kubernetes.io/hostname=traefik.justpipeline.com,metadata.annotations.kubernetes.io/ingress.class=alb,metadata.labels.app=traefik,metadata.name=traefik,metadata.namespace=ingress-controllers,spec.rules.#=1,spec.rules.0.http.paths.#=2,spec.rules.0.http.paths.0.backend.serviceName=ssl-redirect,spec.rules.0.http.paths.0.backend.servicePort=use-annotation,spec.rules.0.http.paths.0.path=/*,spec.rules.0.http.paths.1.backend.serviceName=helm-traefik,spec.rules.0.http.paths.1.backend.servicePort=443,spec.rules.0.http.paths.1.path=/*"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.controllers_prerequisites",
            "data.kubectl_path_documents.ingress",
            "data.kubectl_path_documents.namespaces",
            "helm_release.helm-aws-ingress",
            "helm_release.helm-ext-dns",
            "helm_release.helm-traefik",
            "kubectl_manifest.my_controllers_prerequisites",
            "kubectl_manifest.my_namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "my_namespaces",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/ingress-controllers",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "apiVersion=v1,kind=Namespace,metadata.name=ingress-controllers",
            "live_resource_version": "1365",
            "live_uid": "f1654968-a205-498a-b20a-3cafb7af077f",
            "name": "ingress-controllers",
            "namespace": null,
            "override_namespace": null,
            "resource_version": "1365",
            "sensitive_fields": null,
            "timeouts": null,
            "uid": "f1654968-a205-498a-b20a-3cafb7af077f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Namespace\nmetadata:  \n  name: ingress-controllers",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: ingress-controllers\n",
            "yaml_incluster": "apiVersion=v1,kind=Namespace,metadata.name=ingress-controllers"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "data.kubectl_path_documents.namespaces",
            "module.my_eks.aws_autoscaling_group.workers",
            "module.my_eks.aws_autoscaling_group.workers_launch_template",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.my_eks.aws_launch_configuration.workers",
            "module.my_eks.aws_launch_template.workers_launch_template",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.my_eks.aws_security_group_rule.cluster_private_access",
            "module.my_eks.aws_security_group_rule.workers_egress_internet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.my_eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.my_eks.aws_security_group_rule.workers_ingress_self",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_ami.eks_worker_windows",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.local_file.kubeconfig",
            "module.my_eks.module.fargate.aws_eks_fargate_profile.this",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_eks_node_group.workers",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.aws_ingress_controller_role_with_oidc",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "021510583954",
            "arn": "arn:aws:iam::021510583954:user/nick",
            "id": "021510583954",
            "user_id": "AIDAQKARBO2JD2P55EMIG"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_ingress_controller_role_with_oidc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "4282738958",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub\": [\n            \"system:serviceaccount:ingress-controllers:aws-ingress-controller\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:ingress-controllers:aws-ingress-controller"
                    ],
                    "variable": "oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_ingress_controller_role_with_oidc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_ingress_controller_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:role/aws-ingress-controller-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub\":\"system:serviceaccount:ingress-controllers:aws-ingress-controller\"}}}]}",
            "create_date": "2021-05-25T13:12:47Z",
            "description": "",
            "force_detach_policies": false,
            "id": "aws-ingress-controller-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "aws-ingress-controller-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Role": "aws-ingress-role-with-oidc"
            },
            "tags_all": {
              "Role": "aws-ingress-role-with-oidc"
            },
            "unique_id": "AROAQKARBO2JPMUU7JHDY"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.aws_ingress_controller_role_with_oidc.data.aws_caller_identity.current",
            "module.aws_ingress_controller_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.aws_ingress_controller_role_with_oidc.data.aws_partition.current",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.aws_ingress_controller_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "aws-ingress-controller-role-2021052513124801610000000e",
            "policy_arn": "arn:aws:iam::021510583954:policy/aws-ingress-controller-policy",
            "role": "aws-ingress-controller-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.aws_ingress_controller_policy",
            "data.aws_availability_zones.azs",
            "module.aws_ingress_controller_role_with_oidc.aws_iam_role.this",
            "module.aws_ingress_controller_role_with_oidc.data.aws_caller_identity.current",
            "module.aws_ingress_controller_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.aws_ingress_controller_role_with_oidc.data.aws_partition.current",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.external_dns_role_with_oidc",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "021510583954",
            "arn": "arn:aws:iam::021510583954:user/nick",
            "id": "021510583954",
            "user_id": "AIDAQKARBO2JD2P55EMIG"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.external_dns_role_with_oidc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1940151859",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub\": [\n            \"system:serviceaccount:ingress-controllers:external-dns\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:ingress-controllers:external-dns"
                    ],
                    "variable": "oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.external_dns_role_with_oidc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.external_dns_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:role/external-dns-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33:sub\":\"system:serviceaccount:ingress-controllers:external-dns\"}}}]}",
            "create_date": "2021-05-25T13:12:47Z",
            "description": "",
            "force_detach_policies": false,
            "id": "external-dns-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "external-dns-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Role": "dns-role-with-oidc"
            },
            "tags_all": {
              "Role": "dns-role-with-oidc"
            },
            "unique_id": "AROAQKARBO2JH4YMJD4JN"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.external_dns_role_with_oidc.data.aws_caller_identity.current",
            "module.external_dns_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.external_dns_role_with_oidc.data.aws_partition.current",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.external_dns_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "external-dns-role-2021052513124796180000000a",
            "policy_arn": "arn:aws:iam::021510583954:policy/external-dns-policy",
            "role": "external-dns-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.external_dns_policy",
            "data.aws_availability_zones.azs",
            "module.external_dns_role_with_oidc.aws_iam_role.this",
            "module.external_dns_role_with_oidc.data.aws_caller_identity.current",
            "module.external_dns_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.external_dns_role_with_oidc.data.aws_partition.current",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "021510583954",
            "arn": "arn:aws:iam::021510583954:user/nick",
            "id": "021510583954",
            "user_id": "AIDAQKARBO2JD2P55EMIG"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3709839417",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInternetGateways"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "data",
      "type": "http",
      "name": "wait_for_cluster",
      "provider": "provider[\"registry.terraform.io/terraform-aws-modules/http\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "body": "ok",
            "ca_certificate": "-----BEGIN CERTIFICATE-----\nMIICyDCCAbCgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMDUyNTEzMDg0MloXDTMxMDUyMzEzMDg0MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOw2\n8mtcbuk3KKfo7SVKdmf7dCJ20YPvukpHfWsTMgWVPhzTHEFbJtYMTqj3RNHCLsw9\niztw9bROHTy6ZGVuLcqUwGElOXkDSvzGbt6FIdVu095Ap76Y75LUAukjJvlmMLo0\nIU11dB9TUfi+S+7LoK4GduqK0SPqu/9ZG7ZxkGXRy1Wm4yfMsPd3a8g3ROr3K3Nl\nW4tSmMxDrI5oDeHhQMKQQsWBiEWhwMT+WSpnXbMrH2iH2AU8JVTFiJ6H+vke2BBr\n6RNqfFZ5lDrWZtq6lGJ1YJmQNAp8juF2AuUIlAcPQmzJrTA0ldU9bTI72mEQ14lw\nOSo5Hmb7SLr0jtptno8CAwEAAaMjMCEwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBALjRuvYKjCLAsawMZ8XHK9fVITt5\nOYFPQlhYvY7qINM3nQosqAe346z/4L8DZ9xHULaJK5FyA1UM7GEwa/oHCHoPR86S\n3pHBwEQJOWTqCDOLP54PQl8AWH0nsb/AzQXq1mGliiLUWqK1lA1LW4iuUUL6pScd\n5fzpdfRtsYyYMrUBg+pkgiuRIUuyEIOLihxKrsXhvykVvi6YLUwbzoDit3CV84HW\nQfqJypCuyscGqizeXz33jk4pCalCulJefk21r74NNAzGfIjmO5Ie21CgRQtuTBdp\nWXmmMi0gdzwntmwszSQL+T5ky4F+W7GN3n2a7ueWedt3dn3O4cCaf/OiFsI=\n-----END CERTIFICATE-----\n",
            "id": "https://5B58C90A24A38C427646602AE23BCB33.yl4.us-east-2.eks.amazonaws.com/healthz",
            "insecure": false,
            "request_headers": null,
            "response_headers": {
              "Cache-Control": "no-cache, private",
              "Content-Length": "2",
              "Content-Type": "text/plain; charset=utf-8",
              "Date": "Tue, 25 May 2021 13:13:02 GMT",
              "X-Content-Type-Options": "nosniff"
            },
            "timeout": 300,
            "url": "https://5B58C90A24A38C427646602AE23BCB33.yl4.us-east-2.eks.amazonaws.com/healthz"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-2:021510583954:cluster/my-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXlOVEV6TURnME1sb1hEVE14TURVeU16RXpNRGcwTWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3cyCjhtdGNidWszS0tmbzdTVktkbWY3ZENKMjBZUHZ1a3BIZldzVE1nV1ZQaHpUSEVGYkp0WU1UcWozUk5IQ0xzdzkKaXp0dzliUk9IVHk2WkdWdUxjcVV3R0VsT1hrRFN2ekdidDZGSWRWdTA5NUFwNzZZNzVMVUF1a2pKdmxtTUxvMApJVTExZEI5VFVmaStTKzdMb0s0R2R1cUswU1BxdS85Wkc3WnhrR1hSeTFXbTR5Zk1zUGQzYThnM1JPcjNLM05sClc0dFNtTXhEckk1b0RlSGhRTUtRUXNXQmlFV2h3TVQrV1NwblhiTXJIMmlIMkFVOEpWVEZpSjZIK3ZrZTJCQnIKNlJOcWZGWjVsRHJXWnRxNmxHSjFZSm1RTkFwOGp1RjJBdVVJbEFjUFFtekpyVEEwbGRVOWJUSTcybUVRMTRsdwpPU281SG1iN1NMcjBqdHB0bm84Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMalJ1dllLakNMQXNhd01aOFhISzlmVklUdDUKT1lGUFFsaFl2WTdxSU5NM25Rb3NxQWUzNDZ6LzRMOERaOXhIVUxhSks1RnlBMVVNN0dFd2Evb0hDSG9QUjg2UwozcEhCd0VRSk9XVHFDRE9MUDU0UFFsOEFXSDBuc2IvQXpRWHExbUdsaWlMVVdxSzFsQTFMVzRpdVVVTDZwU2NkCjVmenBkZlJ0c1l5WU1yVUJnK3BrZ2l1UklVdXlFSU9MaWh4S3JzWGh2eWtWdmk2WUxVd2J6b0RpdDNDVjg0SFcKUWZxSnlwQ3V5c2NHcWl6ZVh6MzNqazRwQ2FsQ3VsSmVmazIxcjc0Tk5BekdmSWptTzVJZTIxQ2dSUXR1VEJkcApXWG1tTWkwZ2R6d250bXdzelNRTCtUNWt5NEYrVzdHTjNuMmE3dWVXZWR0M2RuM080Y0NhZi9PaUZzST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-25 13:03:07.426 +0000 UTC",
            "enabled_cluster_log_types": null,
            "encryption_config": [],
            "endpoint": "https://5B58C90A24A38C427646602AE23BCB33.yl4.us-east-2.eks.amazonaws.com",
            "id": "my-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "my-cluster",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::021510583954:role/my-cluster20210525130249659000000001",
            "status": "ACTIVE",
            "tags": null,
            "tags_all": {},
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": null
            },
            "version": "1.17",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-02d11f39dc9d039f7",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0f86bb292d230aacc"
                ],
                "subnet_ids": [
                  "subnet-0a19ac0c7f16c3271",
                  "subnet-0fd6b493c7a6d331d"
                ],
                "vpc_id": "vpc-0af3b26e0e2c4042a"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::021510583954:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33",
            "tags": {
              "Name": "my-cluster-eks-irsa"
            },
            "tags_all": {
              "Name": "my-cluster-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-2.amazonaws.com/id/5B58C90A24A38C427646602AE23BCB33"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:policy/my-cluster-elb-sl-role-creation20210525130249662500000002",
            "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
            "id": "arn:aws:iam::021510583954:policy/my-cluster-elb-sl-role-creation20210525130249662500000002",
            "name": "my-cluster-elb-sl-role-creation20210525130249662500000002",
            "name_prefix": "my-cluster-elb-sl-role-creation",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "policy_id": "ANPAQKARBO2JHY6ZVMEBQ",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:role/my-cluster20210525130249659000000001",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-05-25T13:02:50Z",
            "description": "",
            "force_detach_policies": true,
            "id": "my-cluster20210525130249659000000001",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "my-cluster20210525130249659000000001",
            "name_prefix": "my-cluster",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAQKARBO2JCH5T4SPBH"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::021510583954:role/my-cluster20210525131246381900000009",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-05-25T13:12:47Z",
            "description": "",
            "force_detach_policies": true,
            "id": "my-cluster20210525131246381900000009",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "my-cluster20210525131246381900000009",
            "name_prefix": "my-cluster",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAQKARBO2JFLIQQPQFW"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525130249659000000001-20210525130251371000000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "my-cluster20210525130249659000000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525130249659000000001-20210525130251372100000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "my-cluster20210525130249659000000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525130249659000000001-20210525130251383900000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "my-cluster20210525130249659000000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525130249659000000001-20210525130251363100000003",
            "policy_arn": "arn:aws:iam::021510583954:policy/my-cluster-elb-sl-role-creation20210525130249662500000002",
            "role": "my-cluster20210525130249659000000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525131246381900000009-2021052513124799950000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "my-cluster20210525131246381900000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525131246381900000009-2021052513124800550000000d",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "my-cluster20210525131246381900000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "my-cluster20210525131246381900000009-2021052513124800480000000c",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "my-cluster20210525131246381900000009"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:security-group/sg-0f86bb292d230aacc",
            "description": "EKS cluster security group.",
            "egress": [],
            "id": "sg-0f86bb292d230aacc",
            "ingress": [],
            "name": "my-cluster20210525130302887100000007",
            "name_prefix": "my-cluster",
            "owner_id": "021510583954",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "my-cluster-eks_cluster_sg"
            },
            "tags_all": {
              "Name": "my-cluster-eks_cluster_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.my_vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:security-group/sg-0a7fbfdad8707af4b",
            "description": "Security group for all nodes in the cluster.",
            "egress": [],
            "id": "sg-0a7fbfdad8707af4b",
            "ingress": [],
            "name": "my-cluster20210525130302887500000008",
            "name_prefix": "my-cluster",
            "owner_id": "021510583954",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "my-cluster-eks_worker_sg",
              "kubernetes.io/cluster/my-cluster": "owned"
            },
            "tags_all": {
              "Name": "my-cluster-eks_worker_sg",
              "kubernetes.io/cluster/my-cluster": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.my_vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-1388263897",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0f86bb292d230aacc",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.cluster",
            "module.my_vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-4161719824",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0f86bb292d230aacc",
            "self": false,
            "source_security_group_id": "sg-0a7fbfdad8707af4b",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-1572830384",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0a7fbfdad8707af4b",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.workers",
            "module.my_vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-3788153455",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0a7fbfdad8707af4b",
            "self": false,
            "source_security_group_id": "sg-0f86bb292d230aacc",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-2618054625",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0a7fbfdad8707af4b",
            "self": false,
            "source_security_group_id": "sg-0f86bb292d230aacc",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-920158847",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0a7fbfdad8707af4b",
            "self": false,
            "source_security_group_id": "sg-0a7fbfdad8707af4b",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.my_eks.aws_security_group.workers",
            "module.my_vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "aws_auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "mapAccounts": "[]\n",
              "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::021510583954:role/my-cluster20210525131246381900000009\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n",
              "mapUsers": "- \"groups\":\n  - \"system:masters\"\n  \"userarn\": \"arn:aws:iam::021510583954:user/k8s-admin\"\n  \"username\": \"k8s-admin\"\n"
            },
            "id": "kube-system/aws-auth",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "Terraform",
                  "terraform.io/module": "terraform-aws-modules.eks.aws"
                },
                "name": "aws-auth",
                "namespace": "kube-system",
                "resource_version": "739",
                "self_link": "",
                "uid": "46c2dbf9-be36-4c93-b74f-46a2ea258020"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://5B58C90A24A38C427646602AE23BCB33.yl4.us-east-2.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXlOVEV6TURnME1sb1hEVE14TURVeU16RXpNRGcwTWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3cyCjhtdGNidWszS0tmbzdTVktkbWY3ZENKMjBZUHZ1a3BIZldzVE1nV1ZQaHpUSEVGYkp0WU1UcWozUk5IQ0xzdzkKaXp0dzliUk9IVHk2WkdWdUxjcVV3R0VsT1hrRFN2ekdidDZGSWRWdTA5NUFwNzZZNzVMVUF1a2pKdmxtTUxvMApJVTExZEI5VFVmaStTKzdMb0s0R2R1cUswU1BxdS85Wkc3WnhrR1hSeTFXbTR5Zk1zUGQzYThnM1JPcjNLM05sClc0dFNtTXhEckk1b0RlSGhRTUtRUXNXQmlFV2h3TVQrV1NwblhiTXJIMmlIMkFVOEpWVEZpSjZIK3ZrZTJCQnIKNlJOcWZGWjVsRHJXWnRxNmxHSjFZSm1RTkFwOGp1RjJBdVVJbEFjUFFtekpyVEEwbGRVOWJUSTcybUVRMTRsdwpPU281SG1iN1NMcjBqdHB0bm84Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMalJ1dllLakNMQXNhd01aOFhISzlmVklUdDUKT1lGUFFsaFl2WTdxSU5NM25Rb3NxQWUzNDZ6LzRMOERaOXhIVUxhSks1RnlBMVVNN0dFd2Evb0hDSG9QUjg2UwozcEhCd0VRSk9XVHFDRE9MUDU0UFFsOEFXSDBuc2IvQXpRWHExbUdsaWlMVVdxSzFsQTFMVzRpdVVVTDZwU2NkCjVmenBkZlJ0c1l5WU1yVUJnK3BrZ2l1UklVdXlFSU9MaWh4S3JzWGh2eWtWdmk2WUxVd2J6b0RpdDNDVjg0SFcKUWZxSnlwQ3V5c2NHcWl6ZVh6MzNqazRwQ2FsQ3VsSmVmazIxcjc0Tk5BekdmSWptTzVJZTIxQ2dSUXR1VEJkcApXWG1tTWkwZ2R6d250bXdzelNRTCtUNWt5NEYrVzdHTjNuMmE3dWVXZWR0M2RuM080Y0NhZi9PaUZzST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_my-cluster\n\ncontexts:\n- context:\n    cluster: eks_my-cluster\n    user: eks_my-cluster\n  name: eks_my-cluster\n\ncurrent-context: eks_my-cluster\n\nusers:\n- name: eks_my-cluster\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"my-cluster\"\n",
            "content_base64": null,
            "directory_permission": "0755",
            "file_permission": "0644",
            "filename": "./kubeconfig_my-cluster",
            "id": "eb3dc11777940e118ea9646f48c981daa370c87d",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_eks.module.node_groups",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "private",
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:021510583954:nodegroup/my-cluster/my-cluster-private-proven-bat/04bcd1d4-2335-2c3d-9c16-ae6a15a2247c",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "my-cluster",
            "disk_size": 100,
            "force_update_version": null,
            "id": "my-cluster:my-cluster-private-proven-bat",
            "instance_types": [
              "t2.medium"
            ],
            "labels": null,
            "launch_template": [],
            "node_group_name": "my-cluster-private-proven-bat",
            "node_group_name_prefix": "",
            "node_role_arn": "arn:aws:iam::021510583954:role/my-cluster20210525131246381900000009",
            "release_version": "1.17.12-20210519",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-04bcd1d4-2335-2c3d-9c16-ae6a15a2247c"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 2,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-0a19ac0c7f16c3271",
              "subnet-0fd6b493c7a6d331d"
            ],
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "version": "1.17"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_eks.module.node_groups.aws_launch_template.workers",
            "module.my_eks.module.node_groups.random_pet.node_groups",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_eks.module.node_groups",
      "mode": "managed",
      "type": "random_pet",
      "name": "node_groups",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "index_key": "private",
          "schema_version": 0,
          "attributes": {
            "id": "proven-bat",
            "keepers": {
              "disk_size": "100",
              "iam_role_arn": "arn:aws:iam::021510583954:role/my-cluster20210525131246381900000009",
              "instance_types": "t2.medium",
              "key_name": "",
              "node_group_name": "my-cluster-private",
              "source_security_group_ids": "",
              "subnet_ids": "subnet-0a19ac0c7f16c3271|subnet-0fd6b493c7a6d331d"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "data.aws_eks_cluster.cluster",
            "module.my_eks.aws_cloudwatch_log_group.this",
            "module.my_eks.aws_eks_cluster.this",
            "module.my_eks.aws_iam_instance_profile.workers",
            "module.my_eks.aws_iam_instance_profile.workers_launch_template",
            "module.my_eks.aws_iam_role.cluster",
            "module.my_eks.aws_iam_role.workers",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.my_eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.my_eks.aws_security_group.cluster",
            "module.my_eks.aws_security_group.workers",
            "module.my_eks.aws_security_group_rule.cluster_egress_internet",
            "module.my_eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.my_eks.data.aws_ami.eks_worker",
            "module.my_eks.data.aws_caller_identity.current",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.my_eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.my_eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.my_eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.my_eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.my_eks.data.aws_partition.current",
            "module.my_eks.data.http.wait_for_cluster",
            "module.my_eks.kubernetes_config_map.aws_auth",
            "module.my_eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.my_eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-019180eeda78872cb",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "public_dns": "ec2-18-116-183-247.us-east-2.compute.amazonaws.com",
            "public_ip": "18.116.183.247",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "eks_vpc-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:internet-gateway/igw-09dfd596ee866fea2",
            "id": "igw-09dfd596ee866fea2",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-019180eeda78872cb",
            "id": "nat-04bf730ddce8df791",
            "network_interface_id": "eni-0a8720ef53df7108c",
            "private_ip": "10.0.100.46",
            "public_ip": "18.116.183.247",
            "subnet_id": "subnet-0a737f45a11de24ab",
            "tags": {
              "Name": "eks_vpc-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_eip.nat",
            "module.my_vpc.aws_internet_gateway.this",
            "module.my_vpc.aws_subnet.public",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0b8831f6fb7b3382c1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-04bf730ddce8df791",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0b8831f6fb7b3382c",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_eip.nat",
            "module.my_vpc.aws_internet_gateway.this",
            "module.my_vpc.aws_nat_gateway.this",
            "module.my_vpc.aws_route_table.private",
            "module.my_vpc.aws_subnet.public",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-09dfd596ee866fea2",
            "id": "r-rtb-09bc33c0716959ad01080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-09bc33c0716959ad0",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.my_vpc.aws_internet_gateway.this",
            "module.my_vpc.aws_route_table.public",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:route-table/rtb-0b8831f6fb7b3382c",
            "id": "rtb-0b8831f6fb7b3382c",
            "owner_id": "021510583954",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "eks_vpc-private",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc-private",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:route-table/rtb-09bc33c0716959ad0",
            "id": "rtb-09bc33c0716959ad0",
            "owner_id": "021510583954",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "eks_vpc-public",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc-public",
              "kubernetes.io/cluster/my-cluster": "shared"
            },
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0aebee0f894991c0c",
            "route_table_id": "rtb-0b8831f6fb7b3382c",
            "subnet_id": "subnet-0a19ac0c7f16c3271"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_route_table.private",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0f13515bac75c7a0b",
            "route_table_id": "rtb-0b8831f6fb7b3382c",
            "subnet_id": "subnet-0fd6b493c7a6d331d"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_route_table.private",
            "module.my_vpc.aws_subnet.private",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-03fdc32c4f3d505ec",
            "route_table_id": "rtb-09bc33c0716959ad0",
            "subnet_id": "subnet-0a737f45a11de24ab"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_route_table.public",
            "module.my_vpc.aws_subnet.public",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0b9c08ba676c9b6ee",
            "route_table_id": "rtb-09bc33c0716959ad0",
            "subnet_id": "subnet-076cde89328556b2b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_route_table.public",
            "module.my_vpc.aws_subnet.public",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:subnet/subnet-0a19ac0c7f16c3271",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0a19ac0c7f16c3271",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc-private-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "eks_vpc-private-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:subnet/subnet-0fd6b493c7a6d331d",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0fd6b493c7a6d331d",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc-private-us-east-2b",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "eks_vpc-private-us-east-2b",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:subnet/subnet-0a737f45a11de24ab",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.100.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0a737f45a11de24ab",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc-public-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "eks_vpc-public-us-east-2a",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:subnet/subnet-076cde89328556b2b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.101.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-076cde89328556b2b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc-public-us-east-2b",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "eks_vpc-public-us-east-2b",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0af3b26e0e2c4042a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.azs",
            "module.my_vpc.aws_vpc.this",
            "module.my_vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.my_vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:021510583954:vpc/vpc-0af3b26e0e2c4042a",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-063d04fc2dc4be583",
            "default_route_table_id": "rtb-06560fb6ec669510a",
            "default_security_group_id": "sg-0badfe15163a8f659",
            "dhcp_options_id": "dopt-07de75f960f96528a",
            "enable_classiclink": null,
            "enable_classiclink_dns_support": null,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-0af3b26e0e2c4042a",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-06560fb6ec669510a",
            "owner_id": "021510583954",
            "tags": {
              "Name": "eks_vpc",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/cluster/my_cluster": "shared"
            },
            "tags_all": {
              "Name": "eks_vpc",
              "kubernetes.io/cluster/my-cluster": "shared",
              "kubernetes.io/cluster/my_cluster": "shared"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ]
}
